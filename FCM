# install lib
pip install scikit-fuzzy

import cv2
import numpy as np
import matplotlib.pyplot as plt
import skfuzzy as fuzz

# Load the image
image = cv2.imread('/content/30.jpg')
image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Convert the image to a 1D array
pixel_values = image.reshape((-1, 1))
pixel_values = np.float32(pixel_values)

# Number of clusters to try
num_clusters_list = [4]

plt.figure(figsize=(20, 10))

for i, n_clusters in enumerate(num_clusters_list):
    # Perform Fuzzy C-means clustering
    cntr, u, u0, d, jm, p, fpc = fuzz.cluster.cmeans(
        pixel_values.T, n_clusters, 2, error=0.005, maxiter=1000, init=None)

    # Find the cluster with the highest membership for each pixel
    cluster_membership = np.argmax(u, axis=0)

    # Reshape back to image format
    clustered_image = cluster_membership.reshape(image.shape)

    # Save the clustered image
    output_filename = f'/content/clustered_image_{n_clusters}_clusters.png'
    cv2.imwrite(output_filename, clustered_image * 255 / (n_clusters - 1))

    # Display the clustered image
    plt.subplot(2, 2, i + 1)
    plt.title(f'Number of clusters: {n_clusters}')
    plt.imshow(clustered_image, cmap='gray')
    plt.axis('off')
plt.show()
